<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.7" jmeter="2.12 r1636949">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Taxonomy Application" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="Config localhost" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1427280842000</longProp>
        <longProp name="ThreadGroup.end_time">1427280842000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Variables Taxonomy App V2" enabled="true"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Jmeter Conf" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="env" elementType="Argument">
                <stringProp name="Argument.name">env</stringProp>
                <stringProp name="Argument.value">local</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Batch app" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="SOLR_TAXONOMY_HOST" elementType="Argument">
                <stringProp name="Argument.name">SOLR_TAXONOMY_HOST</stringProp>
                <stringProp name="Argument.value">localhost</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SOLR_TAXONOMY_PORT" elementType="Argument">
                <stringProp name="Argument.name">SOLR_TAXONOMY_PORT</stringProp>
                <stringProp name="Argument.value">12602</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SOLR_TAXONOMY_COLLECTION" elementType="Argument">
                <stringProp name="Argument.name">SOLR_TAXONOMY_COLLECTION</stringProp>
                <stringProp name="Argument.value">DISCOVERY</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SOLR_CLOUD_HOST" elementType="Argument">
                <stringProp name="Argument.name">SOLR_CLOUD_HOST</stringProp>
                <stringProp name="Argument.value">localhost</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SOLR_CLOUD_PORT" elementType="Argument">
                <stringProp name="Argument.name">SOLR_CLOUD_PORT</stringProp>
                <stringProp name="Argument.value">12602</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SOLR_CLOUD_COLLECTION" elementType="Argument">
                <stringProp name="Argument.name">SOLR_CLOUD_COLLECTION</stringProp>
                <stringProp name="Argument.value">DISCOVERY</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ACTIVEMQ_HOST" elementType="Argument">
                <stringProp name="Argument.name">ACTIVEMQ_HOST</stringProp>
                <stringProp name="Argument.value">localhost</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ACTIVEMQ_PORT" elementType="Argument">
                <stringProp name="Argument.name">ACTIVEMQ_PORT</stringProp>
                <stringProp name="Argument.value">61616</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ACTIVEMQ_QUEUE_CATEGORISEDOC" elementType="Argument">
                <stringProp name="Argument.name">ACTIVEMQ_QUEUE_CATEGORISEDOC</stringProp>
                <stringProp name="Argument.value">CATEGORISE.DOCUMENTS</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ACTIVEMQ_QUEUE_DELETEDOC" elementType="Argument">
                <stringProp name="Argument.name">ACTIVEMQ_QUEUE_DELETEDOC</stringProp>
                <stringProp name="Argument.value">DELETE.DOCUMENTS</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="WS app" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="WS_TAXONOMY_HOST" elementType="Argument">
                <stringProp name="Argument.name">WS_TAXONOMY_HOST</stringProp>
                <stringProp name="Argument.value">localhost</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="WS_TAXONOMY_PORT" elementType="Argument">
                <stringProp name="Argument.name">WS_TAXONOMY_PORT</stringProp>
                <stringProp name="Argument.value">8090</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="WS_TAXONOMY_PATH" elementType="Argument">
                <stringProp name="Argument.name">WS_TAXONOMY_PATH</stringProp>
                <stringProp name="Argument.value">taxonomy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test WS" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1425639570000</longProp>
        <longProp name="ThreadGroup.end_time">1425639570000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Integration Tests" enabled="true"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="NEW_IAVIEW_DOCREF" elementType="Argument">
                <stringProp name="Argument.name">NEW_IAVIEW_DOCREF</stringProp>
                <stringProp name="Argument.value">C1807170</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="UPDATE_IAVIEW_DOCREF" elementType="Argument">
                <stringProp name="Argument.name">UPDATE_IAVIEW_DOCREF</stringProp>
                <stringProp name="Argument.value">C11107557</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="UNKNOWN_IAVIEW_DOCREF" elementType="Argument">
                <stringProp name="Argument.name">UNKNOWN_IAVIEW_DOCREF</stringProp>
                <stringProp name="Argument.value">C1807170X</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${WS_TAXONOMY_HOST}</stringProp>
            <stringProp name="HTTPSampler.port">${WS_TAXONOMY_PORT}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          </ConfigTestElement>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Env LOCAL" enabled="true">
            <stringProp name="IfController.condition">&quot;${env}&quot;==&quot;local&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="start WS" enabled="true">
              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
              <stringProp name="SystemSampler.command">${BATCH_RUN_SCRIPT_LOCATION}/startWS.sh</stringProp>
              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SystemSampler.directory"></stringProp>
              <longProp name="SystemSampler.timeout">80000</longProp>
            </SystemSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check APP is started" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="809751874">APP STARTED</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="test run category query" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WS search by cat doc ref" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;categoryQuery&quot;:&quot;CATDOCREF:\&quot;JB 3\/163\&quot;&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${WS_TAXONOMY_PATH}/search</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="check document is found with correct docReference" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1766681694">&quot;docReference&quot;:&quot;C10926286&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="test testCategorise single document" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WS test categorise document" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;title&quot;:&quot;Industrial Injuries Advisory Council Report on Pneumoconiosis (Asbestosis), Diffuse Mesothelioma, Primary Carcinoma of the Lung ...&quot;, &#xd;
	&quot;docReference&quot;:&quot;C10926286&quot;, &#xd;
	&quot;catDocRef&quot;:&quot;JB 3/163&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${WS_TAXONOMY_PATH}/testCategoriseSingle</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="check category was found" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1578940605">&quot;name&quot;:&quot;Disease&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="test run category query" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WS find Untagged Documents By Series" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${WS_TAXONOMY_PATH}/findUntaggedDocumentsBySeries?seriesIaid=LEV 2&amp;limit=10&amp;offset=0</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="check document is found" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="72326863">LEV 2</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Env LOCAL" enabled="true">
            <stringProp name="IfController.condition">&quot;${env}&quot;==&quot;local&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="stop WS" enabled="true">
              <boolProp name="SystemSampler.checkReturnCode">false</boolProp>
              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
              <stringProp name="SystemSampler.command">${BATCH_RUN_SCRIPT_LOCATION}/stopWS.sh</stringProp>
              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SystemSampler.directory"></stringProp>
            </SystemSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test Batch" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1425639570000</longProp>
        <longProp name="ThreadGroup.end_time">1425639570000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Integration Tests" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="test categorising documents" enabled="true"/>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="NEW_IAVIEW_DOCREF" elementType="Argument">
                  <stringProp name="Argument.name">NEW_IAVIEW_DOCREF</stringProp>
                  <stringProp name="Argument.value">C1807170T</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="UPDATE_IAVIEW_DOCREF" elementType="Argument">
                  <stringProp name="Argument.name">UPDATE_IAVIEW_DOCREF</stringProp>
                  <stringProp name="Argument.value">C11107557T</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="UNKNOWN_IAVIEW_DOCREF" elementType="Argument">
                  <stringProp name="Argument.name">UNKNOWN_IAVIEW_DOCREF</stringProp>
                  <stringProp name="Argument.value">C1807170X</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TIME_TO_WAIT_FOR_CATEGORISATION" elementType="Argument">
                  <stringProp name="Argument.name">TIME_TO_WAIT_FOR_CATEGORISATION</stringProp>
                  <stringProp name="Argument.value">40000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DELETE_IAVIEW_DOCREF" elementType="Argument">
                  <stringProp name="Argument.name">DELETE_IAVIEW_DOCREF</stringProp>
                  <stringProp name="Argument.value">C11107557T</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="test Categorise Missing Document" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check document does not exist in Taxonomy Solr" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="q" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">DOCREFERENCE:&quot;${UNKNOWN_IAVIEW_DOCREF}&quot;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">q</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_TAXONOMY_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_TAXONOMY_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_TAXONOMY_COLLECTION}/select</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check document is not found" enabled="true">
                  <boolProp name="XPath.negate">true</boolProp>
                  <stringProp name="XPath.xpath">/response/result/doc/str[@name=&apos;DOCREFERENCE&apos;]=&apos;${UNKNOWN_IAVIEW_DOCREF}&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                </XPathAssertion>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="send categorisationRequest message to Active MQ" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
                <stringProp name="jms.provider_url">tcp://${ACTIVEMQ_HOST}:${ACTIVEMQ_PORT}</stringProp>
                <stringProp name="jms.connection_factory">ConnectionFactory</stringProp>
                <stringProp name="jms.topic">dynamicQueues/${ACTIVEMQ_QUEUE_CATEGORISEDOC}</stringProp>
                <stringProp name="jms.expiration">10000000</stringProp>
                <stringProp name="jms.priority">0</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">${UNKNOWN_IAVIEW_DOCREF}</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
                <boolProp name="jms.destination_static">false</boolProp>
              </PublisherSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="wait for Taxonomy Batch run categorisation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">${TIME_TO_WAIT_FOR_CATEGORISATION}</stringProp>
              </TestAction>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Solr Cloud" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;commit&quot;:{}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_CLOUD_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_CLOUD_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_CLOUD_COLLECTION}/update</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check document does not exist in Solr Cloud" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="q" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">DOCREFERENCE:&quot;${UNKNOWN_IAVIEW_DOCREF}&quot;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">q</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_CLOUD_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_CLOUD_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_CLOUD_COLLECTION}/select</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check document is not found" enabled="true">
                  <boolProp name="XPath.negate">true</boolProp>
                  <stringProp name="XPath.xpath">/response/result/doc/str[@name=&apos;DOCREFERENCE&apos;]=&apos;${UNKNOWN_IAVIEW_DOCREF}&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                </XPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="test Add New Document" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Document in Taxonomy Solr" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[&#xd;
      {&#xd;
        &quot;FORMERREFDEP&quot;: &quot;&quot;,&#xd;
        &quot;FORMERREFPRO&quot;: &quot;&quot;,&#xd;
        &quot;DOCREFERENCE&quot;: &quot;${NEW_IAVIEW_DOCREF}&quot;,&#xd;
        &quot;URLPARAMS&quot;: &quot;066/1/C57/C437/C15761/C89073/0/C11107557&quot;,&#xd;
        &quot;SOURCE&quot;: 100,&#xd;
        &quot;SOURCELEVEL&quot;: 6,&#xd;
        &quot;SCHEMA&quot;: &quot;&quot;,&#xd;
        &quot;DEPARTMENT&quot;: &quot;CO&quot;,&#xd;
        &quot;SERIES&quot;: &quot;CO 1066&quot;,&#xd;
        &quot;CATDOCREF&quot;: &quot;CO 1066/8&quot;,&#xd;
        &quot;CATDOCREFSORT&quot;: &quot;CO 1066/8&quot;,&#xd;
        &quot;CATDOCREFFILTER&quot;: &quot;C&quot;,&#xd;
        &quot;SORTCATDOCREF&quot;: &quot;CO###############################1066###############################8000&quot;,&#xd;
        &quot;TITLE&quot;: &quot;Mau Mau terrorists surrender&quot;,&#xd;
        &quot;TITLEFILTER&quot;: &quot;M&quot;,&#xd;
        &quot;REPOSITORYNAMESUGGEST&quot;: [&#xd;
          &quot;&quot;&#xd;
        ],&#xd;
        &quot;SORTTITLE&quot;: &quot;Mau Mau terrorists surrender&quot;,&#xd;
        &quot;DESCRIPTION&quot;: &quot;Mau Mau terrorists surrender. Poverty&quot;,&#xd;
        &quot;CONTEXTDESCRIPTION&quot;: &quot;Colonial Office: Kenya Information Service: Photographs. MAU MAU ATROCITY PHOTOGRAPHS.&quot;,&#xd;
        &quot;NOTE&quot;: &quot;&quot;,&#xd;
        &quot;ADMINHIST&quot;: &quot;&quot;,&#xd;
        &quot;ARRANGEMENT&quot;: &quot;&quot;,&#xd;
        &quot;PLACE_ADDRESS&quot;: &quot;&quot;,&#xd;
        &quot;PERIODS&quot;: [&#xd;
          &quot;1950&quot;&#xd;
        ],&#xd;
        &quot;STARTDATE&quot;: &quot;1951-01-01T00:00:00Z&quot;,&#xd;
        &quot;ENDDATE&quot;: &quot;1960-12-31T23:59:59Z&quot;,&#xd;
        &quot;NUMSTARTDATE&quot;: 19510101,&#xd;
        &quot;NUMENDDATE&quot;: 19601231,&#xd;
        &quot;COVERINGDATES&quot;: &quot;1951 Jan 01-1960 Dec 31&quot;,&#xd;
        &quot;CLOSURECODE&quot;: &quot;30&quot;,&#xd;
        &quot;CLOSURETYPE&quot;: &quot;N&quot;,&#xd;
        &quot;CLOSURESTATUS&quot;: &quot;O&quot;,&#xd;
        &quot;CLOSURE&quot;: &quot;O&quot;,&#xd;
        &quot;OPENINGDATE&quot;: &quot;0001-01-01T00:00:00Z&quot;,&#xd;
        &quot;REPOSITORY&quot;: [&#xd;
          &quot;66 The National Archives&quot;&#xd;
        ],&#xd;
        &quot;REPOSITORYNAME&quot;: [&#xd;
          &quot;The National Archives&quot;&#xd;
        ],&#xd;
        &quot;REPOSITORYREF&quot;: [&#xd;
          &quot;66&quot;&#xd;
        ],&#xd;
        &quot;HBCODE&quot;: [&#xd;
          &quot;TNA&quot;&#xd;
        ],&#xd;
        &quot;MAPDESIGNATION&quot;: &quot;&quot;,&#xd;
        &quot;MAPSCALE&quot;: &quot;&quot;,&#xd;
        &quot;PHYSICALCOND&quot;: &quot;&quot;&#xd;
      }&#xd;
]</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_TAXONOMY_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_TAXONOMY_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_TAXONOMY_COLLECTION}/update</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Solr Cloud" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;commit&quot;:{}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_CLOUD_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_CLOUD_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_TAXONOMY_COLLECTION}/update</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="send categorisationRequest message to Active MQ" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
                <stringProp name="jms.provider_url">tcp://${ACTIVEMQ_HOST}:${ACTIVEMQ_PORT}</stringProp>
                <stringProp name="jms.connection_factory">ConnectionFactory</stringProp>
                <stringProp name="jms.topic">dynamicQueues/${ACTIVEMQ_QUEUE_CATEGORISEDOC}</stringProp>
                <stringProp name="jms.expiration">10000000</stringProp>
                <stringProp name="jms.priority">0</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">${NEW_IAVIEW_DOCREF}</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
                <boolProp name="jms.destination_static">false</boolProp>
              </PublisherSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="wait for Taxonomy Batch run categorisation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">${TIME_TO_WAIT_FOR_CATEGORISATION}</stringProp>
              </TestAction>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Solr Cloud" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;commit&quot;:{}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_CLOUD_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_CLOUD_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_CLOUD_COLLECTION}/update</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check document is categorised in SolrCloud" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="q" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">DOCREFERENCE:&quot;${NEW_IAVIEW_DOCREF}&quot;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">q</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_CLOUD_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_CLOUD_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_CLOUD_COLLECTION}/select</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check document is found" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">/response/result/doc/str[@name=&apos;DOCREFERENCE&apos;]=&apos;${NEW_IAVIEW_DOCREF}&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                </XPathAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="has category Africa" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1918982496">&lt;str&gt;C10124 Africa&lt;/str&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Document in Taxonomy Solr" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;delete&quot;:{&#xd;
		&quot;query&quot;:&quot;DOCREFERENCE:${NEW_IAVIEW_DOCREF}&quot;&#xd;
		}, &#xd;
	&quot;commit&quot;:{}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_TAXONOMY_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_TAXONOMY_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_TAXONOMY_COLLECTION}/update</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Solr Cloud" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;commit&quot;:{}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_CLOUD_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_CLOUD_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_TAXONOMY_COLLECTION}/update</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="test Update Document" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reset Document in  Solr Cloud" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[&#xd;
      {&#xd;
        &quot;FORMERREFDEP&quot;: &quot;&quot;,&#xd;
        &quot;FORMERREFPRO&quot;: &quot;&quot;,&#xd;
        &quot;DOCREFERENCE&quot;: &quot;${UPDATE_IAVIEW_DOCREF}&quot;,&#xd;
        &quot;URLPARAMS&quot;: &quot;066/1/C57/C437/C15761/C89073/0/C11107557&quot;,&#xd;
        &quot;SOURCE&quot;: 100,&#xd;
        &quot;SOURCELEVEL&quot;: 6,&#xd;
        &quot;SCHEMA&quot;: &quot;&quot;,&#xd;
        &quot;DEPARTMENT&quot;: &quot;CO&quot;,&#xd;
        &quot;SERIES&quot;: &quot;CO 1066&quot;,&#xd;
        &quot;CATDOCREF&quot;: &quot;CO 1066/8&quot;,&#xd;
        &quot;CATDOCREFSORT&quot;: &quot;CO 1066/8&quot;,&#xd;
        &quot;CATDOCREFFILTER&quot;: &quot;C&quot;,&#xd;
        &quot;SORTCATDOCREF&quot;: &quot;CO###############################1066###############################8000&quot;,&#xd;
        &quot;TITLE&quot;: &quot;Mau Mau terrorists surrender&quot;,&#xd;
        &quot;TITLEFILTER&quot;: &quot;M&quot;,&#xd;
        &quot;REPOSITORYNAMESUGGEST&quot;: [&#xd;
          &quot;&quot;&#xd;
        ],&#xd;
        &quot;SORTTITLE&quot;: &quot;Mau Mau terrorists surrender&quot;,&#xd;
        &quot;DESCRIPTION&quot;: &quot;Mau Mau terrorists surrender. Poverty&quot;,&#xd;
        &quot;CONTEXTDESCRIPTION&quot;: &quot;Colonial Office: Kenya Information Service: Photographs. MAU MAU ATROCITY PHOTOGRAPHS.&quot;,&#xd;
        &quot;NOTE&quot;: &quot;&quot;,&#xd;
        &quot;ADMINHIST&quot;: &quot;&quot;,&#xd;
        &quot;ARRANGEMENT&quot;: &quot;&quot;,&#xd;
        &quot;PLACE_ADDRESS&quot;: &quot;&quot;,&#xd;
        &quot;PERIODS&quot;: [&#xd;
          &quot;1950&quot;&#xd;
        ],&#xd;
        &quot;STARTDATE&quot;: &quot;1951-01-01T00:00:00Z&quot;,&#xd;
        &quot;ENDDATE&quot;: &quot;1960-12-31T23:59:59Z&quot;,&#xd;
        &quot;NUMSTARTDATE&quot;: 19510101,&#xd;
        &quot;NUMENDDATE&quot;: 19601231,&#xd;
        &quot;COVERINGDATES&quot;: &quot;1951 Jan 01-1960 Dec 31&quot;,&#xd;
        &quot;CLOSURECODE&quot;: &quot;30&quot;,&#xd;
        &quot;CLOSURETYPE&quot;: &quot;N&quot;,&#xd;
        &quot;CLOSURESTATUS&quot;: &quot;O&quot;,&#xd;
        &quot;CLOSURE&quot;: &quot;O&quot;,&#xd;
        &quot;OPENINGDATE&quot;: &quot;0001-01-01T00:00:00Z&quot;,&#xd;
        &quot;REPOSITORY&quot;: [&#xd;
          &quot;66 The National Archives&quot;&#xd;
        ],&#xd;
        &quot;REPOSITORYNAME&quot;: [&#xd;
          &quot;The National Archives&quot;&#xd;
        ],&#xd;
        &quot;REPOSITORYREF&quot;: [&#xd;
          &quot;66&quot;&#xd;
        ],&#xd;
        &quot;HBCODE&quot;: [&#xd;
          &quot;TNA&quot;&#xd;
        ],&#xd;
        &quot;MAPDESIGNATION&quot;: &quot;&quot;,&#xd;
        &quot;MAPSCALE&quot;: &quot;&quot;,&#xd;
        &quot;PHYSICALCOND&quot;: &quot;&quot;,&#xd;
        &quot;TAXONOMYID&quot;: [&#xd;
          &quot;C10124&quot;,&#xd;
          &quot;C10049&quot;&#xd;
        ],&#xd;
        &quot;TAXONOMY&quot;: [&#xd;
          &quot;C10124 Africa&quot;,&#xd;
          &quot;C10049 International&quot;&#xd;
        ]&#xd;
      }&#xd;
]</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_CLOUD_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_CLOUD_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_CLOUD_COLLECTION}/update?commit=true</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Document in Taxonomy Solr" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[&#xd;
      {&#xd;
        &quot;FORMERREFDEP&quot;: &quot;&quot;,&#xd;
        &quot;FORMERREFPRO&quot;: &quot;&quot;,&#xd;
        &quot;DOCREFERENCE&quot;: &quot;${UPDATE_IAVIEW_DOCREF}&quot;,&#xd;
        &quot;URLPARAMS&quot;: &quot;066/1/C57/C437/C15761/C89073/0/C11107557&quot;,&#xd;
        &quot;SOURCE&quot;: 100,&#xd;
        &quot;SOURCELEVEL&quot;: 6,&#xd;
        &quot;SCHEMA&quot;: &quot;&quot;,&#xd;
        &quot;DEPARTMENT&quot;: &quot;CO&quot;,&#xd;
        &quot;SERIES&quot;: &quot;CO 1066&quot;,&#xd;
        &quot;CATDOCREF&quot;: &quot;CO 1066/8&quot;,&#xd;
        &quot;CATDOCREFSORT&quot;: &quot;CO 1066/8&quot;,&#xd;
        &quot;CATDOCREFFILTER&quot;: &quot;C&quot;,&#xd;
        &quot;SORTCATDOCREF&quot;: &quot;CO###############################1066###############################8000&quot;,&#xd;
        &quot;TITLE&quot;: &quot;Mau Mau terrorists surrender&quot;,&#xd;
        &quot;TITLEFILTER&quot;: &quot;M&quot;,&#xd;
        &quot;REPOSITORYNAMESUGGEST&quot;: [&#xd;
          &quot;&quot;&#xd;
        ],&#xd;
        &quot;SORTTITLE&quot;: &quot;Mau Mau terrorists surrender&quot;,&#xd;
        &quot;DESCRIPTION&quot;: &quot;Mau Mau terrorists surrender. homeless&quot;,&#xd;
        &quot;CONTEXTDESCRIPTION&quot;: &quot;Colonial Office: Kenya Information Service: Photographs. MAU MAU ATROCITY PHOTOGRAPHS.&quot;,&#xd;
        &quot;NOTE&quot;: &quot;&quot;,&#xd;
        &quot;ADMINHIST&quot;: &quot;&quot;,&#xd;
        &quot;ARRANGEMENT&quot;: &quot;&quot;,&#xd;
        &quot;PLACE_ADDRESS&quot;: &quot;&quot;,&#xd;
        &quot;PERIODS&quot;: [&#xd;
          &quot;1950&quot;&#xd;
        ],&#xd;
        &quot;STARTDATE&quot;: &quot;1951-01-01T00:00:00Z&quot;,&#xd;
        &quot;ENDDATE&quot;: &quot;1960-12-31T23:59:59Z&quot;,&#xd;
        &quot;NUMSTARTDATE&quot;: 19510101,&#xd;
        &quot;NUMENDDATE&quot;: 19601231,&#xd;
        &quot;COVERINGDATES&quot;: &quot;1951 Jan 01-1960 Dec 31&quot;,&#xd;
        &quot;CLOSURECODE&quot;: &quot;30&quot;,&#xd;
        &quot;CLOSURETYPE&quot;: &quot;N&quot;,&#xd;
        &quot;CLOSURESTATUS&quot;: &quot;O&quot;,&#xd;
        &quot;CLOSURE&quot;: &quot;O&quot;,&#xd;
        &quot;OPENINGDATE&quot;: &quot;0001-01-01T00:00:00Z&quot;,&#xd;
        &quot;REPOSITORY&quot;: [&#xd;
          &quot;66 The National Archives&quot;&#xd;
        ],&#xd;
        &quot;REPOSITORYNAME&quot;: [&#xd;
          &quot;The National Archives&quot;&#xd;
        ],&#xd;
        &quot;REPOSITORYREF&quot;: [&#xd;
          &quot;66&quot;&#xd;
        ],&#xd;
        &quot;HBCODE&quot;: [&#xd;
          &quot;TNA&quot;&#xd;
        ],&#xd;
        &quot;MAPDESIGNATION&quot;: &quot;&quot;,&#xd;
        &quot;MAPSCALE&quot;: &quot;&quot;,&#xd;
        &quot;PHYSICALCOND&quot;: &quot;&quot;,&#xd;
        &quot;TAXONOMYID&quot;: [&#xd;
          &quot;C10124&quot;,&#xd;
          &quot;C10049&quot;&#xd;
        ],&#xd;
        &quot;TAXONOMY&quot;: [&#xd;
          &quot;C10124 Africa&quot;,&#xd;
          &quot;C10049 International&quot;&#xd;
        ]&#xd;
      }&#xd;
]</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_TAXONOMY_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_TAXONOMY_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_CLOUD_COLLECTION}/update?commit=true</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Solr Cloud" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;commit&quot;:{}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_CLOUD_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_CLOUD_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_CLOUD_COLLECTION}/update</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check document is available in SolrCloud" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="q" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">DOCREFERENCE:&quot;${UPDATE_IAVIEW_DOCREF}&quot;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">q</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_CLOUD_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_CLOUD_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_CLOUD_COLLECTION}/select</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check document is found" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">/response/result/doc/str[@name=&apos;DOCREFERENCE&apos;]=&apos;${UPDATE_IAVIEW_DOCREF}&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                </XPathAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="has category Africa" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1918982496">&lt;str&gt;C10124 Africa&lt;/str&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="has not category Poverty" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-212464996">&lt;str&gt;C10084 Poverty&lt;/str&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check document title" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">/response/result/doc/str[@name=&apos;TITLE&apos;]=&apos;Mau Mau terrorists surrender&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                </XPathAssertion>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="send categorisationRequest message to Active MQ" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
                <stringProp name="jms.provider_url">tcp://${ACTIVEMQ_HOST}:${ACTIVEMQ_PORT}</stringProp>
                <stringProp name="jms.connection_factory">ConnectionFactory</stringProp>
                <stringProp name="jms.topic">dynamicQueues/${ACTIVEMQ_QUEUE_CATEGORISEDOC}</stringProp>
                <stringProp name="jms.expiration">10000000</stringProp>
                <stringProp name="jms.priority">0</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">${UPDATE_IAVIEW_DOCREF}</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
                <boolProp name="jms.destination_static">false</boolProp>
              </PublisherSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="wait for Taxonomy Batch run categorisation" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">${TIME_TO_WAIT_FOR_CATEGORISATION}</stringProp>
              </TestAction>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Solr Cloud" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;commit&quot;:{}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_CLOUD_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_CLOUD_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_CLOUD_COLLECTION}/update</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check document is categorised in SolrCloud" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="q" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">DOCREFERENCE:&quot;${UPDATE_IAVIEW_DOCREF}&quot;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">q</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${SOLR_CLOUD_HOST}</stringProp>
                <stringProp name="HTTPSampler.port">${SOLR_CLOUD_PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/solr/${SOLR_CLOUD_COLLECTION}/select</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check document is found" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">/response/result/doc/str[@name=&apos;DOCREFERENCE&apos;]=&apos;${UPDATE_IAVIEW_DOCREF}&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                </XPathAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="has category Africa" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1918982496">&lt;str&gt;C10124 Africa&lt;/str&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="has category Poverty" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-212464996">&lt;str&gt;C10084 Poverty&lt;/str&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check document title" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">/response/result/doc/str[@name=&apos;TITLE&apos;]=&apos;Mau Mau terrorists surrender&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                </XPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ActiveMQ Queries" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="publish a category" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="send category publication Request message" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
              <stringProp name="jms.provider_url">tcp://${ACTIVEMQ_HOST}:${ACTIVEMQ_PORT}</stringProp>
              <stringProp name="jms.connection_factory">ConnectionFactory</stringProp>
              <stringProp name="jms.topic">dynamicQueues/PUBLISH.CATEGORIES</stringProp>
              <stringProp name="jms.expiration">10000000</stringProp>
              <stringProp name="jms.priority">0</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">C10002;C10003</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
              <boolProp name="jms.destination_static">false</boolProp>
            </PublisherSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="categorise documents" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="send categorisationRequest message to Active MQ" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</stringProp>
              <stringProp name="jms.provider_url">tcp://${ACTIVEMQ_HOST}:${ACTIVEMQ_PORT}</stringProp>
              <stringProp name="jms.connection_factory">ConnectionFactory</stringProp>
              <stringProp name="jms.topic">dynamicQueues/${ACTIVEMQ_QUEUE_CATEGORISEDOC}</stringProp>
              <stringProp name="jms.expiration">10000000</stringProp>
              <stringProp name="jms.priority">0</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">D7251032;C1174910;D7665603;D8648482;C1143730;D7723383;D7283999;C1149501;C1149325;C1102948;D7702710;D7270046;C1179042;C1069025;C1144176;D7665950;D7696101;C1081909;C1161631;D8261935;D8250469;D7291539;C1087649;D7715357;C1097692;D8646459;D8208336;C1095732;C1154438;D7690575;D7681576;C1075609;D7686957;D7671155;C1094848;D8209277;C1156641;C1114279;C1094270;C1127771;C1147010;C1122073;D7245837;D7682396;C11511186;D8213189;C1054676;D8195348;D7681118;C1129602;C1125133;D8219408;D7251429;D7713179;D8248670;C1095494;D7721533;C1129000;D8219988;D8248047;D8187961;D8188401;D7673693;D7292931;C1150089;D7695205;D7669994;C1089052;C1111955;D7283402;D8193987;D7288076;D8196629;D7258328;D7712454;D7700256;D8250871;C1094091;D8235838;C1159247;D7259603;D8285401;C1054287;D8238546;D7691063;D8285216;D7273951;C1173484;D7667356;D7666323;C9751915;D7268579;D8240460;C1176545;C1177854;C1071608;D7677178;D7289675;D7706377;C1066770</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
              <boolProp name="jms.destination_static">false</boolProp>
            </PublisherSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
